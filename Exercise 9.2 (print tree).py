'''
Exercise 9.2 (print tree)
Assume we represent a tree by a recursive tuple, consisting of the name of the root followed by one 
recursive tuple for each of the children. Note that all nodes have a label (not only the leaves), 
and that a node with k children is represented by a tuple of length k + 1. Write a program that prints 
the tree with one label per line and with appropriate indentation, like below.

Example. ('root', ('node 1',), ('node 2', ('node 2.1',), ('node 2.2',)), ('node 3',)) should be printed as

--root
  |--node 1
  |--node 2
  |  |--node 2.1
  |  |--node 2.2
  |--node 3
Hint. Write a recursive method and pass a string as an argument with the prefix to be printed in front 
of all lines generated by the recursive call.

'''
def print_tree(tup, prefix = '--'):
    if isinstance(tup,tuple): #checks if tuple
        for item in tup: #if true, go through each item in tuple
            if isinstance(item,str): #if it's a string, print it with the prefix
                print(prefix + item)
            else: #else call the function recursively with a bigger prefix
                print_tree(item,'  |' + prefix)

print_tree(('root', ('node 1',), ('node 2', ('node 2.1',), ('node 2.2',)), ('node 3',)))